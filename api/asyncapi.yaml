asyncapi: 3.0.0
info:
  title: Smart Gardening
  version: 1.0.0
  description: TODO
  license:
    name: The Unlicense
    url: https://unlicense.org/
servers:
  firebase:
    host: test.europe-west1.firebasedatabase.app
    protocol: https
  mosquitto:
    host: test.mosquitto.org
    protocol: mqtt
channels:
  envInfoLight:
    servers:
      - $ref: '#/servers/firebase'
      - $ref: '#/servers/mosquitto'
    address: /env/info/light
    messages:
      EnvInfoLight:
        $ref: '#/components/messages/EnvInfoLight'
  envInfoTemp:
    servers:
      - $ref: '#/servers/firebase'
      - $ref: '#/servers/mosquitto'
    address: /env/info/temp
    messages:
      EnvInfoTemp:
        $ref: '#/components/messages/EnvInfoTemp'
  polytunnelsList:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/list
    messages:
      PolytunnelList:
        $ref: '#/components/messages/PolytunnelList'
  polytunnelsCreate:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/create
    messages:
      PolytunnelCreationReq:
        $ref: '#/components/messages/PolytunnelCreationReq'
  polytunnelsDelete:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/delete
    messages:
      PolytunnelDeletionReq:
        $ref: '#/components/messages/PolytunnelDeletionReq'
  polytunnelsIntervene:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/intervene
    messages:
      PolytunnelInterventionReq:
        $ref: '#/components/messages/PolytunnelInterventionReq'
  polytunnelsInfoCropAttribLightFB:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/{id}/info/crop/attrib/light
    messages:
      PolytunnelsInfoCropAttribLightFB:
        $ref: '#/components/messages/PolytunnelInfoAttribStatusValue'
  polytunnelsInfoCropAttribHumidityFB:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/{id}/info/crop/attrib/humidity
    messages:
      PolytunnelsInfoCropAttribHumidityFB:
        $ref: '#/components/messages/PolytunnelInfoAttribStatusValue'
  polytunnelsInfoCropAttribSoilMoistureFB:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/{id}/info/crop/attrib/soil-moisture
    messages:
      PolytunnelsInfoCropAttribSoilMoistureFB:
        $ref: '#/components/messages/PolytunnelInfoAttribStatusValue'
  polytunnelsInfoCropAttribTempFB:
    servers:
      - $ref: '#/servers/firebase'
    address: /polytunnels/{id}/info/crop/attrib/temp
    messages:
      PolytunnelsInfoCropAttribTempFB:
        $ref: '#/components/messages/PolytunnelInfoAttribStatusValue'
  polytunnelsInfoCropAttribLightMQTT:
    servers:
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/info/crop/attrib/light
    messages:
      PolytunnelsInfoCropAttribLightMQTT:
        $ref: '#/components/messages/PolytunnelInfoAttribLight'
  polytunnelsInfoCropAttribHumidityMQTT:
    servers:
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/info/crop/attrib/humidity
    messages:
      PolytunnelsInfoCropAttribHumidityMQTT:
        $ref: '#/components/messages/PolytunnelInfoAttribHumidity'
  polytunnelsInfoCropAttribSoilMoistureMQTT:
    servers:
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/info/crop/attrib/soil-moisture
    messages:
      PolytunnelsInfoCropAttribSoilMoistureMQTT:
        $ref: '#/components/messages/PolytunnelInfoAttribSoilMoisture'
  polytunnelsInfoCropAttribTempMQTT:
    servers:
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/info/crop/attrib/temp
    messages:
      PolytunnelsInfoCropAttribTempMQTT:
        $ref: '#/components/messages/PolytunnelInfoAttribTemp'
  polytunnelsInfoHeater:
    servers:
      - $ref: '#/servers/firebase'
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/info/devices/heater
    messages:
      PolytunnelsInfoDevice:
        $ref: '#/components/messages/PolytunnelsInfoDevice'
  polytunnelsInfoLamp:
    servers:
      - $ref: '#/servers/firebase'
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/info/devices/lamp
    messages:
      PolytunnelsInfoDevice:
        $ref: '#/components/messages/PolytunnelsInfoDevice'
  polytunnelsInfoSprinkler:
    servers:
      - $ref: '#/servers/firebase'
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/info/devices/sprinkler
    messages:
      PolytunnelsInfoDevice:
        $ref: '#/components/messages/PolytunnelsInfoDevice'
  polytunnelsInterveneHeater:
    servers:
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/intervene/devices/heater
    messages:
      PolytunnelsInterventionDevice:
        $ref: '#/components/messages/PolytunnelsInterventionDevice'
  polytunnelsInterveneLamp:
    servers:
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/intervene/devices/lamp
    messages:
      PolytunnelsInterventionDevice:
        $ref: '#/components/messages/PolytunnelsInterventionDevice'
  polytunnelsInterveneSprinkler:
    servers:
      - $ref: '#/servers/mosquitto'
    address: /polytunnels/{id}/intervene/devices/sprinkler
    messages:
      PolytunnelsInterventionDevice:
        $ref: '#/components/messages/PolytunnelsInterventionDevice'
operations:
  sendEnvInfoLight:
    action: send
    channel:
      $ref: '#/channels/envInfoLight'
    messages:
      - $ref: '#/channels/envInfoLight/messages/EnvInfoLight'
  onEnvInfoLight:
    action: receive
    channel:
      $ref: '#/channels/envInfoLight'
    messages:
      - $ref: '#/channels/envInfoLight/messages/EnvInfoLight'
  sendEnvInfoTemp:
    action: send
    channel:
      $ref: '#/channels/envInfoTemp'
    messages:
      - $ref: '#/channels/envInfoTemp/messages/EnvInfoTemp'
  onEnvInfoTemp:
    action: receive
    channel:
      $ref: '#/channels/envInfoTemp'
    messages:
      - $ref: '#/channels/envInfoTemp/messages/EnvInfoTemp'
  sendPolytunnelList:
    action: send
    channel:
      $ref: '#/channels/polytunnelsList'
    messages:
      - $ref: '#/channels/polytunnelsList/messages/PolytunnelList'
  onPolytunnelList:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsList'
    messages:
      - $ref: '#/channels/polytunnelsList/messages/PolytunnelList'
  sendPolytunnelCreationReq:
    action: send
    channel:
      $ref: '#/channels/polytunnelsCreate'
    messages:
      - $ref: '#/channels/polytunnelsCreate/messages/PolytunnelCreationReq'
  onPolytunnelCreationReq:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsCreate'
    messages:
      - $ref: '#/channels/polytunnelsCreate/messages/PolytunnelCreationReq'
  sendPolytunnelDeletionReq:
    action: send
    channel:
      $ref: '#/channels/polytunnelsDelete'
    messages:
      - $ref: '#/channels/polytunnelsDelete/messages/PolytunnelDeletionReq'
  onPolytunnelDeletionReq:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsDelete'
    messages:
      - $ref: '#/channels/polytunnelsDelete/messages/PolytunnelDeletionReq'
  sendPolytunnelsInfoCropAttribLightFB:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribLightFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribLightFB/messages/PolytunnelsInfoCropAttribLightFB'
  onPolytunnelsInfoCropAttribLightFB:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribLightFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribLightFB/messages/PolytunnelsInfoCropAttribLightFB'
  sendPolytunnelsInfoCropAttribHumidityFB:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribHumidityFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribHumidityFB/messages/PolytunnelsInfoCropAttribHumidityFB'
  onPolytunnelsInfoCropAttribHumidityFB:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribHumidityFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribHumidityFB/messages/PolytunnelsInfoCropAttribHumidityFB'
  sendPolytunnelsInfoCropAttribSoilMoistureFB:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureFB/messages/PolytunnelsInfoCropAttribSoilMoistureFB'
  onPolytunnelsInfoCropAttribSoilMoistureFB:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureFB/messages/PolytunnelsInfoCropAttribSoilMoistureFB'
  sendPolytunnelsInfoCropAttribTempFB:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribTempFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribTempFB/messages/PolytunnelsInfoCropAttribTempFB'
  onPolytunnelsInfoCropAttribTempFB:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribTempFB'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribTempFB/messages/PolytunnelsInfoCropAttribTempFB'
  sendPolytunnelsInfoCropAttribLightMQTT:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribLightMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribLightMQTT/messages/PolytunnelsInfoCropAttribLightMQTT'
  onPolytunnelsInfoCropAttribLightMQTT:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribLightMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribLightMQTT/messages/PolytunnelsInfoCropAttribLightMQTT'
  sendPolytunnelsInfoCropAttribHumidityMQTT:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribHumidityMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribHumidityMQTT/messages/PolytunnelsInfoCropAttribHumidityMQTT'
  onPolytunnelsInfoCropAttribHumidityMQTT:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribHumidityMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribHumidityMQTT/messages/PolytunnelsInfoCropAttribHumidityMQTT'
  sendPolytunnelsInfoCropAttribSoilMoistureMQTT:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureMQTT/messages/PolytunnelsInfoCropAttribSoilMoistureMQTT'
  onPolytunnelsInfoCropAttribSoilMoistureMQTT:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribSoilMoistureMQTT/messages/PolytunnelsInfoCropAttribSoilMoistureMQTT'
  sendPolytunnelsInfoCropAttribTempMQTT:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribTempMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribTempMQTT/messages/PolytunnelsInfoCropAttribTempMQTT'
  onPolytunnelsInfoCropAttribTempMQTT:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoCropAttribTempMQTT'
    messages:
      - $ref: '#/channels/polytunnelsInfoCropAttribTempMQTT/messages/PolytunnelsInfoCropAttribTempMQTT'
  sendPolytunnelsInfoHeater:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoHeater'
    messages:
      - $ref: '#/channels/polytunnelsInfoHeater/messages/PolytunnelsInfoDevice'
  onPolytunnelsInfoHeater:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoHeater'
    messages:
      - $ref: '#/channels/polytunnelsInfoHeater/messages/PolytunnelsInfoDevice'
  sendPolytunnelsInfoLamp:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoLamp'
    messages:
      - $ref: '#/channels/polytunnelsInfoLamp/messages/PolytunnelsInfoDevice'
  onPolytunnelsInfoLamp:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoLamp'
    messages:
      - $ref: '#/channels/polytunnelsInfoLamp/messages/PolytunnelsInfoDevice'
  sendPolytunnelsInfoSprinkler:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInfoSprinkler'
    messages:
      - $ref: '#/channels/polytunnelsInfoSprinkler/messages/PolytunnelsInfoDevice'
  onPolytunnelsInfoSprinkler:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInfoSprinkler'
    messages:
      - $ref: '#/channels/polytunnelsInfoSprinkler/messages/PolytunnelsInfoDevice'
  sendPolytunnelsIntervention:
    action: send
    channel:
      $ref: '#/channels/polytunnelsIntervene'
    messages:
      - $ref: '#/channels/polytunnelsIntervene/messages/PolytunnelInterventionReq'
  onPolytunnelsIntervention:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsIntervene'
    messages:
      - $ref: '#/channels/polytunnelsIntervene/messages/PolytunnelInterventionReq'
  sendPolytunnelsInterventionHeater:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInterveneHeater'
    messages:
      - $ref: '#/channels/polytunnelsInterveneHeater/messages/PolytunnelsInterventionDevice'
  onPolytunnelsInterventionHeater:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInterveneHeater'
    messages:
      - $ref: '#/channels/polytunnelsInterveneHeater/messages/PolytunnelsInterventionDevice'
  sendPolytunnelsInterventionLamp:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInterveneLamp'
    messages:
      - $ref: '#/channels/polytunnelsInterveneLamp/messages/PolytunnelsInterventionDevice'
  onPolytunnelsInterventionLamp:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInterveneLamp'
    messages:
      - $ref: '#/channels/polytunnelsInterveneLamp/messages/PolytunnelsInterventionDevice'
  sendPolytunnelsInterventionSprinkler:
    action: send
    channel:
      $ref: '#/channels/polytunnelsInterveneSprinkler'
    messages:
      - $ref: '#/channels/polytunnelsInterveneSprinkler/messages/PolytunnelsInterventionDevice'
  onPolytunnelsInterventionSprinkler:
    action: receive
    channel:
      $ref: '#/channels/polytunnelsInterveneSprinkler'
    messages:
      - $ref: '#/channels/polytunnelsInterveneSprinkler/messages/PolytunnelsInterventionDevice'
components:
  messages:
    EnvInfoLight:
      payload:
        type: number
        format: float
        minimum: 0
        maximum: 1
    EnvInfoTemp:
      payload:
        type: number
        format: float
    PolytunnelCreationReq:
      payload:
        type: object
        required:
          - crop
        properties:
          crop:
            $ref: '#/components/schemas/CropNeeds'
    PolytunnelDeletionReq:
      payload:
        type: string
        format: uuid
    PolytunnelInterventionReq:
      payload:
        type: object
        required:
          - uuid
          - device
        properties:
          uuid:
            type: string
            format: uuid
          device:
            type: string
            enum: [
              "heater",
              "lamp",
              "sprinkler"
            ]
    PolytunnelList:
      payload:
        type: array
        items:
          type: string
          format: uuid
    PolytunnelInfoAttribStatusValue:
      payload:
        type: object
        $ref: '#/components/schemas/StatusValue'
    PolytunnelInfoAttribLight:
      payload:
        type: number
        format: float
        minimum: 0
        maximum: 1
    PolytunnelInfoAttribHumidity:
      payload:
        type: number
        format: float
    PolytunnelInfoAttribSoilMoisture:
      payload:
        type: number
        format: float
    PolytunnelInfoAttribTemp:
      payload:
        type: number
        format: float
    PolytunnelsInfoDevice:
      name: PolytunnelsInfoDevice
    PolytunnelsInterventionDevice:
      name: PolytunnelsInterventionDevice
  schemas:
    CropNeeds:
      type: object
      required:
        - name
        - attributes
      properties:
        name:
          type: string
          description: The name of the crop.
        attributes:
          type: object
          required:
            - soilMoisture
            - temp
            - humidity
            - light
          properties:
            soilMoisture:
              $ref: '#/components/schemas/Range'
            temp:
              $ref: '#/components/schemas/Range'
            humidity:
              $ref: '#/components/schemas/Range'
            light:
              $ref: '#/components/schemas/Range'
    Range:
      type: object
      required:
        - range
      properties:
        range:
          type: object
          required:
            - min
            - max
          properties:
            min:
              type: number
              format: float
            max:
              type: number
              format: float
    Status:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [
            "Normal",
            "Critical"
          ]
    Value:
      type: object
      required:
        - value
      properties:
        value:
          type: number
          format: float
    StatusValue:
      type: object
      required:
        - status
        - value
      properties:
        status:
          $ref: '#/components/schemas/Status/properties/status'
        value:
          $ref: '#/components/schemas/Value/properties/value'
